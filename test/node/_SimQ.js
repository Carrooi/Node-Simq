// Generated by CoffeeScript 1.6.3
(function() {
  var Package, SimQ, dir, expect, path, simq;

  expect = require('chai').expect;

  path = require('path');

  SimQ = require('../../lib/_SimQ');

  Package = require('../../lib/Package/Package');

  dir = path.resolve(__dirname + '/../data/package');

  simq = null;

  describe('SimQ', function() {
    beforeEach(function() {
      return simq = new SimQ(dir);
    });
    describe('#addPackage()', function() {
      it('should add new instance of Package class', function() {
        simq.addPackage('test');
        expect(simq.packages).to.include.keys('test');
        return expect(simq.packages.test).to.be.an["instanceof"](Package);
      });
      return it('should throw an error if package is already added', function() {
        simq.addPackage('test');
        return expect(function() {
          return simq.addPackage('test');
        }).to["throw"](Error);
      });
    });
    describe('#getPackage()', function() {
      it('should return instance of created package', function() {
        simq.addPackage('test');
        return expect(simq.getPackage('test')).to.be.an["instanceof"](Package);
      });
      return it('should throw an error if package is not registered', function() {
        return expect(function() {
          return simq._getPackage('test');
        }).to["throw"](Error);
      });
    });
    return describe('#removePackage()', function() {
      it('should remove registered package', function() {
        simq.addPackage('test');
        simq.removePackage('test');
        return expect(simq.packages).not.to.include.keys('test');
      });
      return it('should throw an error if package is not registered', function() {
        return expect(function() {
          return simq.removePackage('test');
        }).to["throw"](Error);
      });
    });
  });

}).call(this);
