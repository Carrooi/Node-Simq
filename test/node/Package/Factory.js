// Generated by CoffeeScript 1.6.3
(function() {
  var Configurator, Factory, Package, configDir, createPackage, dir, expect, getConfig, path;

  expect = require('chai').expect;

  path = require('path');

  Factory = require('../../../lib/Package/Factory');

  Package = require('../../../lib/Package/Package');

  Configurator = require('../../../lib/_Config/Configurator');

  dir = path.resolve(__dirname + '/../../data/package');

  configDir = dir + '/config';

  getConfig = function(name) {
    return (new Configurator(configDir + '/' + name + '.json')).load();
  };

  createPackage = function(name) {
    return Factory.create(dir, getConfig(name).packages.application);
  };

  describe('Package/Factory', function() {
    return describe('#create()', function() {
      it('shoult create empty package', function() {
        var pckg;
        pckg = createPackage('empty');
        expect(pckg).to.be.an["instanceof"](Package);
        expect(pckg.basePath).to.be.equal(dir);
        expect(pckg.skip).to.be["false"];
        expect(pckg.base).to.be["null"];
        expect(pckg.application).to.be["null"];
        expect(pckg.style).to.be["null"];
        expect(pckg.modules).to.be.eql([]);
        return expect(pckg.run).to.be.eql([]);
      });
      it('should create package with result application path', function() {
        var pckg;
        pckg = createPackage('advanced/config');
        return expect(pckg.application).to.be.equal(dir + '/public/application.js');
      });
      it('should create package with styles', function() {
        var pckg;
        pckg = createPackage('styles/styles');
        return expect(pckg.style).to.be.eql({
          "in": dir + '/css/style.less',
          out: dir + '/public/style.css',
          dependencies: null
        });
      });
      it('should create package without styles because there is no in file', function() {
        var pckg;
        pckg = createPackage('styles/no-in');
        return expect(pckg.style).to.be["null"];
      });
      it('should create package without styles because there is no out file', function() {
        var pckg;
        pckg = createPackage('styles/no-out');
        return expect(pckg.style).to.be["null"];
      });
      it('should create package with run section from libraries', function() {
        var pckg;
        pckg = createPackage('libraries');
        return expect(pckg.run).to.be.eql([dir + '/libs/begin/1.js', dir + '/libs/begin/2.js', dir + '/libs/end/1.js', dir + '/libs/end/2.js']);
      });
      it('should create package with modules to run', function() {
        var pckg;
        pckg = createPackage('run');
        expect(pckg.modules).to.be.eql([dir + '/app/Application.coffee', dir + '/app/controllers/Menu.js']);
        return expect(pckg.run).to.be.eql(['app/Application.coffee', 'app/controllers/Menu.js']);
      });
      return it('should create package with modules and libraries in run section', function() {
        var pckg;
        pckg = createPackage('run-and-libraries');
        expect(pckg.modules).to.be.eql([dir + '/app/Application.coffee', dir + '/app/controllers/Menu.js']);
        return expect(pckg.run).to.be.eql([dir + '/libs/begin/1.js', dir + '/libs/begin/2.js', 'app/Application.coffee', 'app/controllers/Menu.js', dir + '/libs/end/1.js', dir + '/libs/end/2.js']);
      });
    });
  });

}).call(this);
