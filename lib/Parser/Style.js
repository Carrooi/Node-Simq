// Generated by CoffeeScript 1.6.3
(function() {
  var Q, Style, fs, less, _path;

  _path = require('path');

  less = require('less');

  fs = require('fs');

  Q = require('q');

  Style = (function() {
    Style.prototype.basePath = null;

    function Style(basePath) {
      this.basePath = basePath;
    }

    Style.prototype.parse = function(path, minify) {
      var load, parse;
      if (minify == null) {
        minify = true;
      }
      load = function(path) {
        path = _path.resolve(path);
        return Q.nfcall(fs.readFile, path, 'utf-8');
      };
      parse = function(content) {
        var deferred, options;
        deferred = Q.defer();
        path = _path.resolve(path);
        options = {
          paths: [_path.dirname(path)],
          optimization: 1,
          filename: path,
          rootpath: '',
          relativeUrls: false,
          strictImports: false,
          compress: minify
        };
        less.render(content, options, function(e, content) {
          if (e) {
            return deferred.reject(new Error(e));
          } else {
            return deferred.resolve(content);
          }
        });
        return deferred.promise;
      };
      return load(path).then(parse);
    };

    return Style;

  })();

  module.exports = Style;

}).call(this);
