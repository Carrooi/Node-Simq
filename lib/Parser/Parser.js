// Generated by CoffeeScript 1.6.3
(function() {
  var Application, Compiler, Loader, Parser, Q, Style, path;

  Q = require('q');

  Application = require('./Application');

  Style = require('./Style');

  Loader = require('../Loader');

  Compiler = require('source-compiler');

  path = require('path');

  Parser = (function() {
    Parser.prototype.simq = null;

    Parser.prototype.pckg = null;

    Parser.prototype.config = null;

    Parser.prototype.loader = null;

    Parser.prototype.basePath = null;

    Parser.prototype.initialized = false;

    function Parser(simq, pckg, basePath) {
      this.simq = simq;
      this.pckg = pckg;
      this.basePath = basePath;
    }

    Parser.prototype.prepare = function() {
      if (!this.initialized) {
        this.config = this.simq.config.load();
        this.loader = new Loader(this.pckg);
        this.loader.jquerify = this.config.template.jquerify;
        if (this.config.cache.directory !== null) {
          Compiler.setCache(this.config.cache.directory);
        }
        return this.initialized = true;
      }
    };

    Parser.prototype.parseApplication = function(section) {
      var application, basePath;
      this.prepare();
      basePath = section.base === null ? this.basePath : this.basePath + '/' + section.base;
      basePath = path.normalize(basePath);
      application = new Application(this.loader, this.pckg, basePath, section);
      application.v = this.simq.v;
      application.minify = !this.config["debugger"].scripts;
      return application.parse();
    };

    Parser.prototype.parseStyle = function(section) {
      this.prepare();
      return (new Style(this.loader, section)).parse();
    };

    return Parser;

  })();

  module.exports = Parser;

}).call(this);
