// Generated by CoffeeScript 1.6.3
(function() {
  var Extension, PackageExtension, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Extension = require('easy-configuration/lib/Extension');

  PackageExtension = (function(_super) {
    __extends(PackageExtension, _super);

    function PackageExtension() {
      _ref = PackageExtension.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    PackageExtension.prototype.defaultsPackage = {
      application: null,
      base: null,
      style: {
        "in": null,
        out: null,
        dependencies: null
      },
      modules: [],
      aliases: {},
      run: [],
      libraries: {
        begin: [],
        end: []
      }
    };

    PackageExtension.prototype.loadConfiguration = function() {
      var config, name, pckg;
      config = this.getConfig();
      for (name in config) {
        pckg = config[name];
        config[name] = this.configurator.merge(pckg, this.defaultsPackage);
        if (pckg.base !== null) {
          pckg.base = pckg.base.replace(/^[\.\/]*/, '').replace(/[\.\/]*$/, '');
        }
      }
      return config;
    };

    return PackageExtension;

  })(Extension);

  module.exports = PackageExtension;

}).call(this);
